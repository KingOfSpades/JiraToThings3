#!/usr/bin/env osascript -l JavaScript
/*
  Copyright 2009, David Martinez

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
const VERBOSE = true

function run(input, params) {
	'use strict';

	var strPath = input[0]
	if (VERBOSE) { 	console.log("Path:"+strPath) }
	var nsjira_report = $.NSString.stringWithContentsOfFileEncodingError(strPath,$.NSUTF8StringEncoding,null)
	var jira_report = ObjC.unwrap(nsjira_report)
	var report_json = JSON.parse(jira_report)

	var completed_stati = report_json['completed_stati']
	if (VERBOSE) { console.log("Completed stati:"+completed_stati) }
  var app_params     = report_json['task_app_params']
	var target_project = app_params['project_name']
  var tag_names      = app_params['tags']

	var TaskApp = Application("Things3")
	TaskApp.includeStandardAdditions = true
	if (VERBOSE) { 	console.log("Setting target project: "+target_project) }
	var things_project = TaskApp.projects.byName(target_project)
	things_project.name() // To force an exception that we can see.
	if (VERBOSE) { console.log("Setting target project: "+things_project.name()) }

	var things_tasks = TaskApp.toDos

	for (var i = report_json['results'].length - 1; i >= 0; i--) {
		var row = report_json['results'][i]
		var task_name = row['task_name']
		var task_notes = row['task_notes']
		var task_status = row['status']
		var task_flags = row['task_flags']
		// Checking if date is set in Jira
		if (row['task_deadline'] == "nodate") {
			var task_deadline = false
		} 
		else
		{
			// Converting task to JavaScript acceptable date
			var task_deadline = new Date(row['task_deadline']);
		}
		if (VERBOSE) { console.log("Task: " + task_name + " with date " + task_deadline) }
		// Get a/the task by getting a similair task with the same name
		var things_task = things_tasks.byName(task_name)
		try {
			var things_name = things_task.name()
			if (VERBOSE) { console.log("Found task: and it's " + things_task.status() + ". Setting status to " + task_status) }
					things_task.tagNames = tag_names

					// Update the note with info from Source
					console.log("Updating note of task " + things_task.name())
					things_task.notes = task_notes
		
					// This will update the task.dueDate if the Source has a deadline
					if (task_deadline) { console.log("The Task has the due date: " + task_deadline)
						things_task.dueDate = task_deadline	
					}

					// If task is completed, complete the task
					if (completed_stati.indexOf(task_status) >= 0) {
						if (VERBOSE) { console.log("Marking Done") }
										things_task.status = 'completed'
					}
			} catch (err) {
				if (completed_stati.indexOf(task_status) > 0 ) { console.log("This task has already been closed in Jira, we will not add it to the Things3") }
				else {
				if (VERBOSE) { console.log("No task Found in Things3. Error: " + err.message + " . Adding it to Things3. " + completed_stati.indexOf(task_status)) }
					var toDo = TaskApp.ToDo({
						name: task_name,
						notes: task_notes,
						project: things_project,
						tagNames: tag_names,
						status: ( completed_stati.indexOf(task_status) > 0 ? 'completed' : 'open' ) // if status is larger then 0 then its completed
					})
			// Check if the Jira ticket has a deadline
			if (task_deadline) { toDo['dueDate'] = task_deadline }
			if (VERBOSE) { console.log("New TaskApp ToDo: " + toDo.name + " in project: " + things_project.name() + " with due date: " + task_deadline) }
			TaskApp.toDos.push(toDo)

			// Setting the todo for today
			console.log("Scheduling the task for today")
			var today = new Date()

			TaskApp.schedule(toDo, {for: today})
			}
			}

			// Not found, keep going.
	}

	console.log("Finished proccessing "+report_json['results'].length+" tasks from Jira to Things.")

}

